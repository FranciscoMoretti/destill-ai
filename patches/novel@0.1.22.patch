diff --git a/dist/index.d.mts b/dist/index.d.mts
index 9335871c389d548ed143f36a6ee775e927d7bf05..172d8b2909862517a2f16a49e3ff53ce1d90e21a 100644
--- a/dist/index.d.mts
+++ b/dist/index.d.mts
@@ -8,6 +8,11 @@ declare function Editor({ completionApi, className, defaultValue, extensions, ed
      * Defaults to "/api/generate".
      */
     completionApi?: string;
+    /**
+     * The Id for the completion API.
+     * Defaults to "novel".
+     */
+    completionId?: string;
     /**
      * Additional classes to add to the editor container.
      * Defaults to "relative min-h-[500px] w-full max-w-screen-lg border-stone-200 bg-white sm:mb-[calc(20vh)] sm:rounded-lg sm:border sm:shadow-lg".
@@ -33,6 +38,12 @@ declare function Editor({ completionApi, className, defaultValue, extensions, ed
      * Defaults to () => {}.
      */
     onUpdate?: (editor?: Editor$1) => void | Promise<void>;
+    /**
+     * A callback function that is called whenever the editor is created.
+     * Defaults to () => {}.
+     */
+    // eslint-disable-next-line no-unused-vars
+    onCreate?: (editor?: Editor$1) => void | Promise<void>;
     /**
      * A callback function that is called whenever the editor is updated, but only after the defined debounce duration.
      * Defaults to () => {}.
diff --git a/dist/index.d.ts b/dist/index.d.ts
index 9335871c389d548ed143f36a6ee775e927d7bf05..172d8b2909862517a2f16a49e3ff53ce1d90e21a 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -8,6 +8,11 @@ declare function Editor({ completionApi, className, defaultValue, extensions, ed
      * Defaults to "/api/generate".
      */
     completionApi?: string;
+    /**
+     * The Id for the completion API.
+     * Defaults to "novel".
+     */
+    completionId?: string;
     /**
      * Additional classes to add to the editor container.
      * Defaults to "relative min-h-[500px] w-full max-w-screen-lg border-stone-200 bg-white sm:mb-[calc(20vh)] sm:rounded-lg sm:border sm:shadow-lg".
@@ -33,6 +38,12 @@ declare function Editor({ completionApi, className, defaultValue, extensions, ed
      * Defaults to () => {}.
      */
     onUpdate?: (editor?: Editor$1) => void | Promise<void>;
+    /**
+     * A callback function that is called whenever the editor is created.
+     * Defaults to () => {}.
+     */
+    // eslint-disable-next-line no-unused-vars
+    onCreate?: (editor?: Editor$1) => void | Promise<void>;
     /**
      * A callback function that is called whenever the editor is updated, but only after the defined debounce duration.
      * Defaults to () => {}.
diff --git a/dist/index.js b/dist/index.js
index 43b29ad33942309793dae4c5f5dbd44abf353016..03f618790628f2268dca25f7997a5acf19179b98 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -537,7 +537,8 @@ var getPrevText = (editor, {
 // src/ui/editor/provider.tsx
 var import_react = require("react");
 var NovelContext = (0, import_react.createContext)({
-  completionApi: "/api/generate"
+  completionApi: "/api/generate",
+  completionId: "novel"
 });
 
 // src/ui/editor/extensions/slash-command.tsx
@@ -707,9 +708,9 @@ var CommandList = ({
   range
 }) => {
   const [selectedIndex, setSelectedIndex] = (0, import_react2.useState)(0);
-  const { completionApi } = (0, import_react2.useContext)(NovelContext);
+  const { completionApi, completionId } = (0, import_react2.useContext)(NovelContext);
   const { complete, isLoading } = (0, import_react4.useCompletion)({
-    id: "novel",
+    id: completionId,
     api: completionApi,
     onResponse: (response) => {
       if (response.status === 429) {
@@ -16672,12 +16673,15 @@ var ImageResizer = ({ editor }) => {
 var import_jsx_runtime9 = require("react/jsx-runtime");
 function Editor2({
   completionApi = "/api/generate",
+  completionId = "novel",
   className = "novel-relative novel-min-h-[500px] novel-w-full novel-max-w-screen-lg novel-border-stone-200 novel-bg-white sm:novel-mb-[calc(20vh)] sm:novel-rounded-lg sm:novel-border sm:novel-shadow-lg",
   defaultValue = defaultEditorContent,
   extensions = [],
   editorProps = {},
   onUpdate = () => {
   },
+  onCreate = () => {
+  },
   onDebouncedUpdate = () => {
   },
   debounceDuration = 750,
@@ -16717,10 +16721,15 @@ function Editor2({
         debouncedUpdates(e);
       }
     },
+    onCreate: (e) =>{
+      if(onCreate){
+        onCreate(e.editor)
+      }
+    },
     autofocus: "end"
   });
   const { complete, completion, isLoading, stop } = (0, import_react13.useCompletion)({
-    id: "novel",
+    id: completionId,
     api: completionApi,
     onFinish: (_prompt, completion2) => {
       editor == null ? void 0 : editor.commands.setTextSelection({
@@ -16787,7 +16796,8 @@ function Editor2({
     NovelContext.Provider,
     {
       value: {
-        completionApi
+        completionApi,
+        completionId
       },
       children: /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)(
         "div",
diff --git a/dist/index.mjs b/dist/index.mjs
index 0630ce76514c591ddfda41588b518cebac7db95d..5da65faff3226b49195d80549343d4666fd23102 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -523,7 +523,8 @@ var getPrevText = (editor, {
 // src/ui/editor/provider.tsx
 import { createContext } from "react";
 var NovelContext = createContext({
-  completionApi: "/api/generate"
+  completionApi: "/api/generate",
+  completionId: "novel"
 });
 
 // src/ui/editor/extensions/slash-command.tsx
@@ -693,9 +694,9 @@ var CommandList = ({
   range
 }) => {
   const [selectedIndex, setSelectedIndex] = useState(0);
-  const { completionApi } = useContext(NovelContext);
+  const { completionApi, completionId } = useContext(NovelContext);
   const { complete, isLoading } = useCompletion({
-    id: "novel",
+    id: completionId,
     api: completionApi,
     onResponse: (response) => {
       if (response.status === 429) {
@@ -16675,12 +16676,15 @@ var ImageResizer = ({ editor }) => {
 import { jsx as jsx9, jsxs as jsxs8 } from "react/jsx-runtime";
 function Editor2({
   completionApi = "/api/generate",
+  completionId = "novel",
   className = "novel-relative novel-min-h-[500px] novel-w-full novel-max-w-screen-lg novel-border-stone-200 novel-bg-white sm:novel-mb-[calc(20vh)] sm:novel-rounded-lg sm:novel-border sm:novel-shadow-lg",
   defaultValue = defaultEditorContent,
   extensions = [],
   editorProps = {},
   onUpdate = () => {
   },
+  onCreate = () => {
+  },
   onDebouncedUpdate = () => {
   },
   debounceDuration = 750,
@@ -16720,10 +16724,15 @@ function Editor2({
         debouncedUpdates(e);
       }
     },
+    onCreate: (e) =>{
+      if(onCreate){
+        onCreate(e.editor)
+      }
+    },
     autofocus: "end"
   });
   const { complete, completion, isLoading, stop } = useCompletion2({
-    id: "novel",
+    id: completionId,
     api: completionApi,
     onFinish: (_prompt, completion2) => {
       editor == null ? void 0 : editor.commands.setTextSelection({
@@ -16790,7 +16799,8 @@ function Editor2({
     NovelContext.Provider,
     {
       value: {
-        completionApi
+        completionApi,
+        completionId
       },
       children: /* @__PURE__ */ jsxs8(
         "div",
